<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on TMC - 11 Digital Tech | Semester 1</title><link>https://tmcdigitech.github.io/dit11/appdev/api/</link><description>Recent content in API on TMC - 11 Digital Tech | Semester 1</description><generator>Hugo</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit11/appdev/api/index.xml" rel="self" type="application/rss+xml"/><item><title>What is an API</title><link>https://tmcdigitech.github.io/dit11/appdev/api/whatisapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit11/appdev/api/whatisapi/</guid><description>&lt;p>There are millions of APIs online which provide access to data. Websites like Reddit, Twitter, and Facebook all offer certain data through their APIs.&lt;/p>
&lt;p>To use an API, you make a request to a remote web server, and retrieve the data you need.&lt;/p>
&lt;p>But why use an API instead of a static CSV dataset you can download from the web? APIs are useful in the following cases:&lt;/p>
&lt;ul>
&lt;li>The data is changing quickly. An example of this is stock price data. It doesn’t really make sense to regenerate a dataset and download it every minute — this will take a lot of bandwidth, and be pretty slow.&lt;/li>
&lt;li>You want a small piece of a much larger set of data. Reddit comments are one example. What if you want to just pull your own comments on Reddit? It doesn’t make much sense to download the entire Reddit database, then filter just your own comments.&lt;/li>
&lt;li>There is repeated computation involved. Spotify has an API that can tell you the genre of a piece of music. You could theoretically create your own classifier, and use it to compute music categories, but you’ll never have as much data as Spotify does.
In cases like the ones above, an API is the right solution. We’ll be querying a simple API to retrieve data about the International Space Station (ISS).&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://tmcdigitech.github.io/dit11/appdev/api/whatisapi/iss.jpg">
&lt;/figure>

&lt;div class="gdoc-page__anchorwrap">
 &lt;h2 id="what-is-an-api">
 What is an API?
 &lt;a data-clipboard-text="https://tmcdigitech.github.io/dit11/appdev/api/whatisapi/#what-is-an-api" class="gdoc-page__anchor gdoc-page__anchor--right clip" aria-label="Anchor What is an API?" href="#what-is-an-api">
 &lt;svg class="icon gdoc_link">&lt;use xlink:href="#gdoc_link">&lt;/use>&lt;/svg>
 &lt;/a>
 &lt;/h2>
&lt;/div>&lt;p>An API, or &lt;strong>Application Programming Interface&lt;/strong>, is a server that you can use to retrieve and send data to using code. APIs are most commonly used to retrieve data, and that will be the focus of this beginner tutorial.&lt;/p></description></item><item><title>Parse JSON</title><link>https://tmcdigitech.github.io/dit11/appdev/api/parsejson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit11/appdev/api/parsejson/</guid><description>&lt;div class="gdoc-page__anchorwrap">
 &lt;h1 id="what-is-parsing">
 What is Parsing
 &lt;a data-clipboard-text="https://tmcdigitech.github.io/dit11/appdev/api/parsejson/#what-is-parsing" class="gdoc-page__anchor gdoc-page__anchor--right clip" aria-label="Anchor What is Parsing" href="#what-is-parsing">
 &lt;svg class="icon gdoc_link">&lt;use xlink:href="#gdoc_link">&lt;/use>&lt;/svg>
 &lt;/a>
 &lt;/h1>
&lt;/div>&lt;p>Parsing is breaking a block of data into smaller pieces (tokens) by following a set of rules (using delimiters for example), so that this data could be processes piece by piece (managed, analysed, interpreted, transmitted, ets).&lt;/p>
&lt;p>How do we parse JSON in Python. First we load a JSON file using &lt;strong>json.load()&lt;/strong> method. The result is a &lt;strong>Python dictionary&lt;/strong>. We can then access the fields using dictionary methods.&lt;/p></description></item></channel></rss>